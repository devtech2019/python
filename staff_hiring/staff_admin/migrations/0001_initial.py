# Generated by Django 3.2 on 2022-04-07 13:14

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import staff_admin.manager
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('roll', models.CharField(choices=[('subadmin', 'Subadmin'), ('admin', 'Admin'), ('employer', 'employer'), ('applicant', 'applicant')], max_length=10)),
                ('slug', models.CharField(default=uuid.uuid4, max_length=50, unique=True)),
                ('company', models.CharField(blank=True, max_length=100, null=True)),
                ('fname', models.CharField(max_length=50)),
                ('lname', models.CharField(max_length=50)),
                ('price', models.CharField(blank=True, default=None, max_length=10, null=True)),
                ('username', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('image', models.ImageField(blank=True, default='face1.jpg', null=True, upload_to='media')),
                ('mobile_number', models.CharField(max_length=50)),
                ('landline', models.CharField(max_length=20, null=True)),
                ('country_code', models.CharField(max_length=10)),
                ('city', models.CharField(max_length=20)),
                ('post_code', models.CharField(max_length=10)),
                ('latitude', models.FloatField(null=True)),
                ('longitude', models.FloatField(null=True)),
                ('experience', models.CharField(max_length=20, null=True)),
                ('address', models.CharField(max_length=300, null=True)),
                ('address2', models.CharField(max_length=300, null=True)),
                ('user_status', models.BooleanField(default=False, null=True)),
                ('company_profile_status', models.BooleanField(default=False, null=True)),
                ('soft_del_status', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('OTP_string', models.CharField(max_length=10, null=True)),
                ('reset_time_link', models.DateTimeField(auto_now_add=True)),
                ('OTP', models.CharField(max_length=10)),
                ('OTP_create_at', models.DateTimeField(auto_now_add=True)),
                ('exp_year', models.CharField(max_length=5, null=True)),
                ('exp_month', models.CharField(max_length=5, null=True)),
                ('mob_no_verified', models.BooleanField(default=False)),
                ('email_verified', models.BooleanField(default=False)),
                ('mail_notification', models.BooleanField(default=True)),
                ('push_notification', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', staff_admin.manager.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AboutUs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('image', models.ImageField(blank=True, null=True, upload_to='aboutus/')),
                ('slug', models.SlugField(default=uuid.uuid4, unique=True)),
                ('discripion', models.TextField()),
                ('soft_del_status', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AppWebIntro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('textarea', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='intro/')),
                ('slug', models.SlugField(default=uuid.uuid4, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.CharField(default=uuid.uuid4, max_length=50, unique=True)),
                ('week_hour', models.CharField(max_length=4)),
                ('leave_day', models.CharField(choices=[('sun', 'Sunday'), ('mon', 'Monday'), ('tue', 'Tuesday'), ('wed', 'Wednesday'), ('thu', 'thursday'), ('fri', 'Friday'), ('sat', 'satureday')], max_length=200)),
                ('shift_diffrence', models.CharField(max_length=3)),
                ('status', models.BooleanField(default=True)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('soft_del_status', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Cities',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('state_id', models.CharField(max_length=30)),
                ('state_code', models.CharField(max_length=30)),
                ('country_id', models.CharField(max_length=20)),
                ('country_code', models.CharField(max_length=20)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='ContactUs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('First_name', models.CharField(max_length=255, null=True)),
                ('Last_name', models.CharField(max_length=255, null=True)),
                ('email', models.CharField(max_length=255)),
                ('message', models.CharField(max_length=255)),
                ('slug', models.SlugField(default=uuid.uuid4, unique=True)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('sub', models.CharField(max_length=100, null=True)),
                ('soft_del_status', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ContentManagement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('desc', models.TextField()),
                ('slug', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('ios3', models.CharField(max_length=20)),
                ('iso2', models.CharField(max_length=20)),
                ('phonecode', models.CharField(max_length=20)),
                ('capital', models.CharField(max_length=100)),
                ('currency', models.CharField(max_length=100)),
                ('native', models.CharField(max_length=100)),
                ('symbol', models.CharField(max_length=100)),
                ('region', models.CharField(max_length=100)),
                ('subregion', models.CharField(max_length=100)),
                ('timezones', models.CharField(max_length=100)),
                ('tld', models.CharField(max_length=100)),
                ('latitude', models.FloatField(null=True)),
                ('longitude', models.FloatField(null=True)),
                ('emoji', models.CharField(max_length=100)),
                ('emojiU', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='email_templates',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('sub', models.CharField(max_length=50)),
                ('slug', models.SlugField(default=uuid.uuid4, unique=True)),
                ('content', models.TextField()),
                ('soft_del_status', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Global_setting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('img', models.ImageField(blank=True, null=True, upload_to='global/')),
                ('facebook_link', models.CharField(max_length=50)),
                ('instagram_link', models.CharField(max_length=50)),
                ('pintrest_link', models.CharField(max_length=50)),
                ('twitter_link', models.CharField(max_length=50)),
                ('linkdin_link', models.CharField(max_length=50)),
                ('slug', models.SlugField(default=uuid.uuid4, unique=True)),
                ('discripion', models.TextField()),
                ('soft_del_status', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='meet_our_team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('image', models.ImageField(blank=True, null=True, upload_to='aboutus/')),
                ('slug', models.CharField(default=uuid.uuid4, max_length=50, unique=True)),
                ('discripion', models.TextField()),
                ('soft_del_status', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='pages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('slug', models.SlugField(default=uuid.uuid4, unique=True)),
                ('text', models.TextField()),
                ('content', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='pages/')),
                ('soft_del_status', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Qr_Code',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Qr_url', models.URLField()),
                ('Qr_image', models.ImageField(blank=True, null=True, upload_to='Qr_image')),
            ],
        ),
        migrations.CreateModel(
            name='States',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('country_id', models.CharField(max_length=20)),
                ('country_code', models.CharField(max_length=20)),
                ('fips_code', models.CharField(max_length=10)),
                ('iso2', models.CharField(max_length=10)),
                ('state_code', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Training',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('training_name', models.CharField(max_length=255)),
                ('Status', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('soft_del_status', models.BooleanField(default=False)),
                ('user', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='country',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='staff_admin.country'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='position',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='staff_admin.category'),
        ),
        migrations.AddField(
            model_name='user',
            name='state',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='staff_admin.states'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
